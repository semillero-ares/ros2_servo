{"config":{"indexing":"full","lang":["es"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"Comunicaci%C3%B3n%20serial/","text":"Comunicaci\u00f3n serial en WSL En WSL necesitaremos instalar esto . O tendremos que generar una comunicaci\u00f3n serial falsa de la siguiente forma socat -d -d pty,rawer,echo=0 pty,rawer,echo=0 En mi caso aparecieron los puertos seriales /dev/pts/3 y /dev/pts/4 ... los cuales pueden ser usados en el archivo de configuraci\u00f3n de ros2_control. Conexi\u00f3n por TCP al serial de Windows Para conectarnos por TCP a un serial de Windows desde nuestro Ubuntu WSL, vamos a usar dos programas, uno en windows y otro en linux, En windows podremos usar: TCPCOM32 , se instala y se configura como server. com0com m\u00e1s referencias aqu\u00ed En linux podremos usar multiples opciones: ser2net bash sudo apt-get install ser2net socat ( ref-2 ) REVISAR Como vamos a estar trabajando con Arduino, la configuraci\u00f3n serial de este es: SERIAL_8N1 : Comunicaci\u00f3n serial de 8 Bits, Sin paridad (N), con un bit de parada.","title":"Comunicaci\u00f3n serial"},{"location":"Comunicaci%C3%B3n%20serial/#comunicacion-serial-en-wsl","text":"En WSL necesitaremos instalar esto . O tendremos que generar una comunicaci\u00f3n serial falsa de la siguiente forma socat -d -d pty,rawer,echo=0 pty,rawer,echo=0 En mi caso aparecieron los puertos seriales /dev/pts/3 y /dev/pts/4 ... los cuales pueden ser usados en el archivo de configuraci\u00f3n de ros2_control.","title":"Comunicaci\u00f3n serial en WSL"},{"location":"Comunicaci%C3%B3n%20serial/#conexion-por-tcp-al-serial-de-windows","text":"Para conectarnos por TCP a un serial de Windows desde nuestro Ubuntu WSL, vamos a usar dos programas, uno en windows y otro en linux, En windows podremos usar: TCPCOM32 , se instala y se configura como server. com0com m\u00e1s referencias aqu\u00ed En linux podremos usar multiples opciones: ser2net bash sudo apt-get install ser2net socat ( ref-2 ) REVISAR Como vamos a estar trabajando con Arduino, la configuraci\u00f3n serial de este es: SERIAL_8N1 : Comunicaci\u00f3n serial de 8 Bits, Sin paridad (N), con un bit de parada.","title":"Conexi\u00f3n por TCP al serial de Windows"},{"location":"Using%20Moveit%20Assitant/","text":"Usando el asistente de Moveit Para poder usar Moveit2 debemos crear unos archivos de configuraci\u00f3n necesarios para correr moveit. Estos archivos se pueden generar en el Moveit-Assitant, lamentablemente este asistente solo est\u00e1 disponible en ROS1, por lo que tendremos que instalarlo. Para hacer la instalaci\u00f3n de ROS1 en nuestro Ubuntu 22.04 y no tener problemas con nuestra instalaci\u00f3n de ROS2, lo instalaremos en una ambiente virtual creado con mamba ( una versi\u00f3n m\u00e1s r\u00e1pide de Anaconda ). Instalando mamba para gestionar los ambientes virtuales Inicialmente tendremos que instalar mamba . Tomado de aqu\u00ed , ejecutaremos los siguientes comandos: curl -L -O \"https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh\" bash Mambaforge-Linux-x86_64.sh Una vez instalado vamos a ir a la carpeta mambaforge/bin y ejecutaremos los siguientes comandos para activar mamba: ./conda init ./conda config --set auto_activate_base false Reiniciamos el terminal y ahora podemos continuar con la instalaci\u00f3n de ROS1 La instalaci\u00f3n de ROS1 en un ambiente virtual Secci\u00f3n inspirada en la documentaci\u00f3n de RoboStack Inicialmente vamos a crear el ambiente virtual, como la versi\u00f3n de ROS1 que vamos a instalar es la noetic, creare el ambiente virtual con el siguiente comando: mamba create -n noetic_env mamba init Luego de reiniciar el terminal, activaremos el ambiente virtual: mamba activate noetic_env Prepararemos el ambiente para instalar ROS1 de los repositorios correctos: # this adds the conda-forge channel to the new created environment configuration conda config --env --add channels conda-forge # and the robostack channel conda config --env --add channels robostack-staging # remove the defaults channel just in case, this might return an error if it is not in the list which is ok conda config --env --remove channels defaults El \u00faltimo comando puede generar un error por que algunas veces no existe, entonces no puede ser removido. Ya tenemos entonces el ambiente listo para instalar ROS1, que instalaremos con el siguiente comando: # Install ros-noetic into the environment (ROS1) mamba install ros-noetic-desktop # Install tools for local development mamba install compilers cmake pkg-config make ninja colcon-common-extensions catkin_tools Para poder usar ROS1, debemos desactivar ROS2 del archivo ~/.bashrc , esto lo haremos comentando la linea mostrada a continuaci\u00f3n: # source /opt/ros/humble/setup.bash y reiniciando el terminal. Probando la instalaci\u00f3n En dos terminales haremos lo siguiente: En el terminal 1, activaremos el ambiente y luego correremos el comando roscore que inicia el proceso principal de ROS1: bash mamba activate noetic_env roscore En el terminal 2, activaremos el ambiente y correremos el comando de rviz: bash mamba activate noetic_env rviz Instalando Moveit para ROS1 Estando dentro del ambiente virtual ( noetic_env ), vamos a instalar moveit con el siguiente comando: mamba install ros-noetic-moveit Una vez instalado podremos correr el assistente para moveit con el siguiente comando: roslaunch moveit_setup_assistant setup_assistant.launch Usando el asistente de MoveIt https://www.youtube.com/watch?v=EosEikbZhiM Para usar el asistente necesitaremos un archivo \"URDF\" : ros2 topic echo /robot_description -l 1000000000 > data.urdf","title":"Usando el asistente de Moveit"},{"location":"Using%20Moveit%20Assitant/#usando-el-asistente-de-moveit","text":"Para poder usar Moveit2 debemos crear unos archivos de configuraci\u00f3n necesarios para correr moveit. Estos archivos se pueden generar en el Moveit-Assitant, lamentablemente este asistente solo est\u00e1 disponible en ROS1, por lo que tendremos que instalarlo. Para hacer la instalaci\u00f3n de ROS1 en nuestro Ubuntu 22.04 y no tener problemas con nuestra instalaci\u00f3n de ROS2, lo instalaremos en una ambiente virtual creado con mamba ( una versi\u00f3n m\u00e1s r\u00e1pide de Anaconda ).","title":"Usando el asistente de Moveit"},{"location":"Using%20Moveit%20Assitant/#instalando-mamba-para-gestionar-los-ambientes-virtuales","text":"Inicialmente tendremos que instalar mamba . Tomado de aqu\u00ed , ejecutaremos los siguientes comandos: curl -L -O \"https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh\" bash Mambaforge-Linux-x86_64.sh Una vez instalado vamos a ir a la carpeta mambaforge/bin y ejecutaremos los siguientes comandos para activar mamba: ./conda init ./conda config --set auto_activate_base false Reiniciamos el terminal y ahora podemos continuar con la instalaci\u00f3n de ROS1","title":"Instalando mamba para gestionar los ambientes virtuales"},{"location":"Using%20Moveit%20Assitant/#la-instalacion-de-ros1-en-un-ambiente-virtual","text":"Secci\u00f3n inspirada en la documentaci\u00f3n de RoboStack Inicialmente vamos a crear el ambiente virtual, como la versi\u00f3n de ROS1 que vamos a instalar es la noetic, creare el ambiente virtual con el siguiente comando: mamba create -n noetic_env mamba init Luego de reiniciar el terminal, activaremos el ambiente virtual: mamba activate noetic_env Prepararemos el ambiente para instalar ROS1 de los repositorios correctos: # this adds the conda-forge channel to the new created environment configuration conda config --env --add channels conda-forge # and the robostack channel conda config --env --add channels robostack-staging # remove the defaults channel just in case, this might return an error if it is not in the list which is ok conda config --env --remove channels defaults El \u00faltimo comando puede generar un error por que algunas veces no existe, entonces no puede ser removido. Ya tenemos entonces el ambiente listo para instalar ROS1, que instalaremos con el siguiente comando: # Install ros-noetic into the environment (ROS1) mamba install ros-noetic-desktop # Install tools for local development mamba install compilers cmake pkg-config make ninja colcon-common-extensions catkin_tools Para poder usar ROS1, debemos desactivar ROS2 del archivo ~/.bashrc , esto lo haremos comentando la linea mostrada a continuaci\u00f3n: # source /opt/ros/humble/setup.bash y reiniciando el terminal.","title":"La instalaci\u00f3n de ROS1 en un ambiente virtual"},{"location":"Using%20Moveit%20Assitant/#probando-la-instalacion","text":"En dos terminales haremos lo siguiente: En el terminal 1, activaremos el ambiente y luego correremos el comando roscore que inicia el proceso principal de ROS1: bash mamba activate noetic_env roscore En el terminal 2, activaremos el ambiente y correremos el comando de rviz: bash mamba activate noetic_env rviz","title":"Probando la instalaci\u00f3n"},{"location":"Using%20Moveit%20Assitant/#instalando-moveit-para-ros1","text":"Estando dentro del ambiente virtual ( noetic_env ), vamos a instalar moveit con el siguiente comando: mamba install ros-noetic-moveit Una vez instalado podremos correr el assistente para moveit con el siguiente comando: roslaunch moveit_setup_assistant setup_assistant.launch","title":"Instalando Moveit para ROS1"},{"location":"Using%20Moveit%20Assitant/#usando-el-asistente-de-moveit_1","text":"https://www.youtube.com/watch?v=EosEikbZhiM Para usar el asistente necesitaremos un archivo \"URDF\" : ros2 topic echo /robot_description -l 1000000000 > data.urdf","title":"Usando el asistente de MoveIt"}]}